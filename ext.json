{
  "plugin_type": "analytics_integration",
  "name": "Track Return Visitors",
  "form_schema": [
    {
      "default_value": "unique_evt_for_experiment",
      "field_type": "text",
      "name": "return_visitor_evt_apiname",
      "label": "Return Visitor Event API Name",
      "options": null
    },
    {
      "default_value": "both",
      "field_type": "dropdown",
      "name": "mode",
      "label": "Session Mode (Optimizely Session or Browser Session)",
      "options": {
        "choices": [
          {
            "value": "both",
            "label": "Both"
          },
          {
            "value": "optimizely",
            "label": "Optimizely Session Only"
          },
          {
            "value": "browser",
            "label": "Browser Session Only"
          }
        ]
      }
    }
  ],
  "description": "Track visitors that return back to the site in a new session after being exposed to an experiment",
  "options": {
    "track_layer_decision": "window.optimizely = window.optimizely || [];\n\nvar runExt = function() {\n try {\n    if(!!localStorage.getItem('__optReturnVisitorTrackerDebug')) {\n      console.log('+++ In the Ext handler', (new Date).getTime());\n    }\n    var forwardToPJS = {\n      mode: extension.mode,\n      return_visitor_evt_apiname: extension.return_visitor_evt_apiname,   \n      experimentId: experimentId,\n      campaignId: campaignId,\n      variationId: variationId,\n      isHoldback: isHoldback\n    };\n    window.__optReturnVisitorTracker.setParams(forwardToPJS);\n    window.__optReturnVisitorTracker.decisionMade(experimentId);\n  } catch(err) { console.log(err); }     \n}\n\nif(window.__optReturnVisitorTracker.initialized) runExt();\nelse {\n  window.optimizely.push({\n    type: \"addListener\",\n    filter: {\n      \"type\": \"lifecycle\",\n      \"name\": \"activated\"\n    },\n    handler: runExt\n  });   \n}\n  \nif(!!localStorage.getItem('__optReturnVisitorTrackerDebug')) {\n  console.log('+++ In the Ext Body', (new Date).getTime());\n}"
  }
}
