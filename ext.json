{
  "plugin_type": "analytics_integration",
  "name": "Track Return Visitors",
  "form_schema": [
    {
      "default_value": "unique_evt_for_experiment",
      "field_type": "text",
      "name": "return_visitor_evt_apiname",
      "label": "Return Visitor Event API Name",
      "options": null
    },
    {
      "default_value": "both",
      "field_type": "dropdown",
      "name": "mode",
      "label": "Session Mode (Optimizely Session or Browser Session)",
      "options": {
        "choices": [
          {
            "value": "both",
            "label": "Both"
          },
          {
            "value": "optimizely",
            "label": "Optimizely Session Only"
          },
          {
            "value": "browser",
            "label": "Browser Session Only"
          }
        ]
      }
    }
  ],
  "description": "Track visitors that return back to the site in a new session after being exposed to an experiment",
  "options": {
    "track_layer_decision": "/**\n* if visitor saw the experiment before, in a different session, send \"return visitor\" event\n* return visitor metric needs to be scoped to an experiment by using some unique string or ID\n*/\nsetTimeout(function() {\n\n  try {\n    var forwardToPJS = {\n      mode: extension.mode,\n      return_visitor_evt_apiname: extension.return_visitor_evt_apiname,   \n      experimentId: experimentId,\n      campaignId: campaignId,\n      variationId: variationId,\n      isHoldback: isHoldback\n    };\n    window.__optReturnVisitorTracker.setParams(forwardToPJS);\n    window.__optReturnVisitorTracker.decisionMade(experimentId);\n  } catch(err) { console.log(err); }\n  \n}, 0);\n\n"
  }
}
